title: Course Recap

> "I will let the data speak for itself when it cleans itself."
——Allison Reichel


# some principles 

  - understand your data, goals, and conceptual frameworks
  - organize your work 
  - make your work more pleasant for yourself
  - make your work navigable for others
  - get help from the community 
  - reduce tedium and manual processes
  - make collaboration easier
  - make communication easier

<!-- from jenny bryan's talk: 
new tools and workflows for data analysis --> 

## use R projects and packages to stay organized

  - have a roadmap of what you're aiming to accomplish
  - have a changelog or timeline or anthology of
  decisions made on your project

## use git to avoid

  - going on archaeological digs on old email threads
  - uncertainty about which version of the code is the most
  up-to-date
  - uncertainty on what's the most recent data 
  - uncertainty on if issues have been solved
  - zip files of file salad 

## make your work more pleasant

using modern tooling in R and on GitHub 

[insert marie kondo slide]

  - you can have joyful code instead of dreadful code
  - you can feel confident about your code instead of leery and uncertain
  - your projects can be colorful and expressive, not bland and
  joyless

## making your work navigable for others

  - sharing your work through markdown files on GitHub is great, but you can also 
    - blog about your work 
    - tweet / post about it on social media
    - and make interactive web pages to play with the data / findings
    
## get help from the community 

  - you can connect with the RStats community to learn more happy-making practices

<blockquote class="twitter-tweet"><p lang="en" dir="ltr">My 10 Tips for Getting Help in R: <a href="https://t.co/OxK1iilbsr">https://t.co/OxK1iilbsr</a><br>TL;DR:<br>📖Read the docs<br>🔍Google the error<br>🧠Search smarter not harder<br>🔥Burn it all down<br>🔁Make a reprex<br>🐦Ask Twitter w/ <a href="https://twitter.com/hashtag/rstats?src=hash&amp;ref_src=twsrc%5Etfw">#rstats</a><br>☎️Phone a friend<br>😴Sleep on it<br>💬Ask your q on an online community<br>🙋File an issue on GitHub</p>&mdash; Dr. Sam Tyner-Monroe (@sctyner) <a href="https://twitter.com/sctyner/status/1206986161434058752?ref_src=twsrc%5Etfw">December 17, 2019</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> 
  
## reduce tedium and manual processes

  - sometimes tedium is unfortunately; however
  - often solutions already exist to do what you're trying to do! 
  - or you can be clever about restructuring what you need to do 
  to leverage tooling that already exists

## make collaboration easier

  - use git & github 
  - use clean & considerate code 
  - make your work **easily** reproducible

## make communciation easier

  - no one has every said "it's a shame we have all this great documentation"
  - reproducible examples will make getting help on your challenges `Inf`% easier
  - use R Markdown and literate programming practices to make your analysis
  transparent and engaging for your colleagues and collaborators.
  - a fantastic ggplot can do more than speak 1000 words: it can tell a good
  story with a coherent narrative and resultantly capture and intrigue viewers.
  
# resources 
 
 
   - Good Enough Practices in Scientific Computing 
   https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005510 
   - https://kbroman.org/Talk_DataCleaning/data_cleaning_notes.pdf
   - https://speakerdeck.com/jennybc/new-tools-and-workflows-for-data-analysis
 