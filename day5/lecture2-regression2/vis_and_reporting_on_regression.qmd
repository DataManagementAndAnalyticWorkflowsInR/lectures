---
title: "Reporting on Regression Models"
format:
  revealjs:
    theme: [default, regression.scss]
slide-number: true
# title-slide-attributes: 
#   data-background-image: ""
#   data-background-opacity: "60%"
#   data-background-color: "black"
revealjs-plugins:
  - pointer
execute: 
  echo: true
---

# morals

text-based tables are more precise, but data visualizations are more
eye-catching and easier to use to spot patterns.

## exploratory modeling

```{r}
library(tidyverse)
library(palmerpenguins)

ggplot(penguins,
            aes(
              x = bill_length_mm,
              y = bill_depth_mm,
              color = species,
              shape = species
            )) + 
  geom_point() + 
  geom_smooth()
```

## exploratory modeling

```{r}
ggplot(penguins,
            aes(
              x = bill_length_mm,
              y = bill_depth_mm,
              color = species,
              shape = species
            )) + 
  geom_point() + 
  geom_smooth(method = 'lm')
```

## exploratory modeling

```{r}
library(NHANES)
NHANES |> filter(Age < 80, DaysMentHlthBad > 0) |> 
  ggplot(aes(x = Age, y = DaysMentHlthBad, color = HHIncome)) + 
  geom_point(alpha = 0.1) + 
  geom_smooth(method='lm')
```

## exploratory modeling

```{r}
NHANES |> filter(Age < 80, DaysMentHlthBad > 0) |> 
  ggplot(aes(x = Age, y = DaysMentHlthBad, color = HHIncome)) + 
  geom_point(alpha = 0.1) + 
  geom_smooth(formula = y ~ x, method='lm', se = FALSE)
```

## make a model 

```{r}
NHANES$HHIncome <- relevel(NHANES$HHIncome, "more 99999")
model <- lm(DaysMentHlthBad ~ Age + HHIncome, data = NHANES)
```

## broom::tidy

```{r}
broom::tidy(model)
```

## forest plots

```{r}
coefficients_table <- broom::tidy(model, conf.int = TRUE)

coefficients_table |> 
  ggplot(aes(y = term, x = estimate, xmax = conf.high, xmin = conf.low)) + 
  geom_pointrange(size = .1) 
```

## forest plots

```{r}
coefficients_table |> 
  ggplot(aes(y = term, x = estimate, xmax = conf.high, xmin = conf.low)) + 
  geom_vline(xintercept = 0) + 
  geom_pointrange(size = .1) + 
  theme_bw() 
```

## forest plots

```{r}
coefficients_table |> 
  ggplot(aes(
    y = term,
    x = estimate,
    xmax = conf.high,
    xmin = conf.low
  )) + 
  geom_vline(xintercept = 0) + 
  geom_pointrange(size = .1) + 
  xlab("Additional Days of Poor Mental Health Reported per Month") + 
  ggtitle("Association of Variables with Additional Poor Mental Health Days Reported") + 
  theme_bw() 
```

## forest plots

```{r}
coefficients_table |> 
  ggplot(aes(
    y = term,
    x = estimate,
    xmax = conf.high,
    xmin = conf.low,
    color = case_when(
      conf.low > 0 & conf.high > 0 ~ "Significantly Above 0",
      conf.low < 0 & conf.high < 0 ~ "Significantly Below 0",
      TRUE ~ "Not Significant"
    )
  )) + 
  geom_vline(xintercept = 0) + 
  geom_pointrange(size = .1) + 
  scale_color_manual(
    values = c('Significantly Above 0' = '#ff7675',
               'Significantly Below 0' = '#74b9ff',
               'Not Significant' = 'dimgrey')
  ) + 
  ggtitle("Modeling Poor Mental Health Days Reported") + 
  theme_bw() + 
  labs(
    x = "Additional Days of Poor Mental Health Reported per Month",
    color = 'Significance') + 
  theme(
    legend.position = 'bottom'
  )
```

## gtsummary 

```{r}
library(gtsummary)
tbl_regression(model)
```

## gtsummary 

```{r}
library(gtsummary)
tbl_regression(model) %>% 
  add_glance_table()
```

# diagnostics 

## qq plots



## DHARMa

## residuals 

## standard diagnostic plots

https://www.statology.org/scale-location-plot/

https://www.statology.org/residuals-vs-leverage-plot/ 

## variable importance 



```{r}
library(tidyverse)
library(palmerpenguins)
library(NHANES)
library(gtsummary)

NHANES <- NHANES |> 
  mutate(
    Poverty_cut = cut(Poverty, quantile(NHANES$Poverty, seq(0,1,.25), na.rm=T))
  )

model <- 
  lm(
    BPSysAve ~ 
      Gender * AgeDecade + 
       Race1 + 
       Education + 
      BMI_WHO + 
      MaritalStatus + 
       Poverty_cut + 
       PhysActiveDays + 
       SmokeNow,
    data = NHANES
  )

broom::tidy(model, conf.int=TRUE) |> 
  ggplot(aes(x = estimate, xmin = conf.low, xmax = conf.high, y = term, color = p.value < 0.05)) + 
  geom_vline(xintercept = 0) +
  geom_linerange() + 
  geom_point() 
  
tbl_regression(model, intercept = TRUE)

library(easystats)

plot(check_normality(model), type='qq')

plot(parameters(model))

report_performance(model)

report_info(model)

report_intercept(model)
```

```{r}
library(randomForest)
library(vip)

rf_model <- randomForest(
  BPSysAve ~ 
    Gender +
    AgeDecade +
    Race1 +
    Education +
    BMI_WHO +
    MaritalStatus +
    Poverty_cut +
    PhysActiveDays +
    SmokeNow, 
    data = NHANES,
    na.action = na.omit
)

vip(rf_model)
vip(model)
```
